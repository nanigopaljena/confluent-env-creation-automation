name: Terraform Confluent

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Git environment (dev, sbx, tst, prod)"
        required: true
        default: "dev"
      ckEnvironmentId:
        description: "Environment Id for which service account is required (e.g., env-abcd12)"
        required: true
        default: "env-xyn1gz"
      ckEnvironmentName:
        description: "Environment name for which service account is required (e.g., sbx-us-eastus2)"
        required: true
        default: "dev-us-centralus"
      ckClusterId:
        description: "Cluster Id for which service account is required (e.g., lkc-abcd12)"
        required: true
        default: "lkc-g0gd6v"
      saForGravitee:
        description: "Provision service account for Gravitee?"
        type: boolean
        default: true
      saForLiam:
        description: "Provision service account for LIAM?"
        type: boolean
        default: true
      liamProjectName:
        description: "LIAM project name (e.g., liam-dev)"
        required: true
        default: "liam-dev"
      defaultTopicForLiam:
        description: "Provision default topic for LIAM?"
        type: boolean
        default: true

jobs:
  terraform:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    env:
      TF_VAR_confluent_cloud_api_key: ${{ secrets.CONFLUENT_CLOUD_API_KEY }}
      TF_VAR_confluent_cloud_api_secret: ${{ secrets.CONFLUENT_CLOUD_API_SECRET }}
      TF_VAR_confluent_cluster_api_key: ${{ secrets.CLUSTER_API_KEY }}
      TF_VAR_confluent_cluster_api_secret: ${{ secrets.CLUSTER_API_SECRET }}
      TF_VAR_confluent_organization_id: ${{ secrets.CONFLUENT_ORG_ID }}
      TF_VAR_confluent_environment_id: ${{ github.event.inputs.ckEnvironmentId }}
      TF_VAR_confluent_environment_name: ${{ github.event.inputs.ckEnvironmentName }}
      TF_VAR_confluent_kafka_cluster_id: ${{ github.event.inputs.ckClusterId }}
      TF_VAR_by_env: ${{ github.event.inputs.environment }}
      TF_VAR_sa_for_gravitee: ${{ github.event.inputs.saForGravitee }}
      TF_VAR_sa_for_liam: ${{ github.event.inputs.saForLiam }}
      TF_VAR_liam_project_name: ${{ github.event.inputs.liamProjectName }}
      TF_VAR_default_topic_for_liam: ${{ github.event.inputs.defaultTopicForLiam }}

    steps:
      - name: Extract region from environmentName
        id: extract_region
        run: echo "region=$(echo '${{ github.event.inputs.ckEnvironmentName }}' | awk -F'-' '{print $NF}')" >> $GITHUB_OUTPUT

      - name: Print extracted region
        run: echo "${{ steps.extract_region.outputs.region }}"

      - name: Set region env
        run: echo "TF_VAR_region=${{ steps.extract_region.outputs.region }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.4

      - name: Terraform Init
        working-directory: ./terraform/gravitee-and-liam-sa-provisioning
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform/gravitee-and-liam-sa-provisioning
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform/gravitee-and-liam-sa-provisioning
        run: terraform apply -auto-approve tfplan
